plugins {
    id "java"
    id "com.timgroup.jarmangit" version "1.1.86"
    id "com.github.johnrengelman.shadow" version "2.0.2"
}

ext {
    buildNumber = System.getenv("BUILD_NUMBER") ?: System.getenv("TRAVIS_BUILD_NUMBER")
    mainClassName = 'com.timgroup.blankapp.Launcher'
}

group = 'com.timgroup'
if (buildNumber) version = '1.0.' + buildNumber

repositories {
    maven {
        name "nexus"
        url "${repoUrl}/groups/public"
    }
}

dependencies {
    compile "com.timgroup:Tucker:1.0.1494" // autobump
    compile "com.timgroup:tim-logger:1.5.1083" // autobump
    compile "com.timgroup:tim-structured-events:0.4.1235" // autobump
    compile "io.dropwizard.metrics:metrics-core:3.2.3"
    compile "io.dropwizard.metrics:metrics-jvm:3.2.3"
    compile "io.dropwizard.metrics:metrics-graphite:3.2.3"
    compile 'org.eclipse.jetty:jetty-server:9.4.6.v20170531'
    compile 'org.eclipse.jetty:jetty-servlet:9.4.6.v20170531'

    testCompile "junit:junit:4.12"
    testCompile "org.hamcrest:hamcrest-core:1.3"
    testCompile "org.hamcrest:hamcrest-library:1.3"
    testCompile "com.timgroup:tim-structured-events-testing:0.4.1235" // autobump
    testCompile 'org.apache.httpcomponents:httpclient:4.4.1'
}

tasks.withType(JavaCompile).all {
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
    options.encoding = "UTF-8"
    options.incremental = true
    options.deprecation = true
    options.compilerArgs << "-parameters"
}

task run(type: JavaExec) {
    group = "run"
    description = "Run application using regular and library jars"
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
    args += 'config.properties'
}

tasks.withType(Jar).all {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor': 'TIM Group Ltd'
        )
    }
}

shadowJar {
    manifest {
        attributes(
                "X-Java-Version": "8",
                "Main-Class": mainClassName
        )
    }
}

assemble.dependsOn(shadowJar)

task runShadow(type: Exec, dependsOn: shadowJar) {
    group = "run"
    description = "Run application from shadow-jar, just like as deployed"
    commandLine 'java', '-jar', tasks.shadowJar.archivePath, 'config.properties'
}
